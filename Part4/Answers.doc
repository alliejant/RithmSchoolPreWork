Debugging Exercises:
	Part0:
	1. the throw keyword can throw an error
	2. the finally keyword runs the code you put in between the brackets regardless if there was an error found
	3. A typeError is when you are doing something you cannot do for that type of variable and a referenceError means the variable hasn’t been defined or doesn’t exist.
	4. You go to Sources and click + Snippet
	5. It’s what you have chosen to pause on
	6. try { code} catch(err) {code}
	Part1: 
	1. ReferenceError because person is not defined
	2. TypeError because the method has not been defined, so it cannot be used on data
	3. TypeError because a property cannot be set on something that is undefined
	4. ReferenceError because thing has not been defined.
	Part2: 
	1. the greater should be less than
	2. the = should be ===
	3. the commas should be semi-colons
	4. should be i < numbers.length, i++ doesn’t need semi-colon, numbers should be numbers[i], = should be ===, no semi-colon is needed after if parenthesis, should push numbers[i] not i, return evenNumbers should come after the for loop
Nested Arrays:
	1. function rotate(arr, num){
    let numToR = num % arr.length;
    let newArr = arr.slice();
    for(let i = 0; i < numToR; i++){
        let curr = newArr.pop();
        newArr.unshift(curr);
    }
    return newArr;
}
	2. function makeXOGrid(subArr, len){
    let x = true;
    let finArr = [];
    for(let i = 0; i < subArr; i++){
        let newArr = [];
        for(let j = 0; j < len; j++){
            if(x) newArr.push("X");
            else newArr.push("O");
            x = !x;
        }
        finArr.push(newArr);
    }
    return finArr;
}
HigherOrderFunctions, Timers, and Closures:
	1.function countdown(num){
    let timer = setInterval(function(){
        if(num === 0){
            setTimeout(function(){
                clearTimeout(timer);
            }, 0);
        }
        if(num) console.log(num);
        else console.log("Done!");
        num--;
    }, 1000);
}

	2.function randomGame(){
    let counter = 0;
    let timer = setInterval(function(){
        let rand = Math.random();
        counter++;
        console.log(rand + " " + counter);
        if(rand > .75){
            setTimeout(function(){
                clearTimeout(timer);
            }, 0);
        }
    }, 1000);
}

	3.function isEven(num){
    return !!num%2;
}

	4.function isOdd(num){
    return !num%2;
}

	5. function isPrime(num){
    for(var i = 2; i <= num/2; i++){
        if(num%i === 0) return false;
    }
    return true;
}

	6.function numberFact(num, cb){
    return cb(num);
}

	7.function find(arr, cb){
    for(let i = 0; i < arr.length; i++){
        if( cb(arr[i]) ) return arr[i];
    }
}

	8.function findIndex(arr,cb){
    for(let i = 0; i < arr.length; i++){
        if( cb(arr[i]) ) return i;
    }
}

	9.function specialMultiply(num1, num2){
    if(num2 !== undefined) return num1 * num2;
    else {
        return function(num2){
            return num1 * num2;
        }
    }
}
DOM Exercises:
	1.document.getElementById(“container”);
	2.document.querySelector(“#container”);
	3.document.getElementsByClassName(“second:);
	4.document.querySelector(“ol .third”);
	5.document.querySelector(“#container”).innerHTML = “Hello!”;
	6.document.querySelector(“.footer”).classListAdd(“main”);
	7.document.querySelector(“.footer”).classListRemove(“main”)
	8.let four = document.createElement(“li”);
	9.four.innerText = “four”;
	10.document.querySelector(“ul”).appendChild(four);
	11. let olItems = document.querySelectorAll(“ol li”);
for(let i = 0; i < olItems.length; i++){
	olItems[i].style.backgroundColor = “green”;
}
	12. let divToRemove = document.querySelector(“div#footer”);
divToRemove.parentElement.removeChild(divToRemove);

Events Exercises:
	Part1:
		1. document.addEventListener(“DOMContentLoaded”, function(){};
		2. document.getElementById(“change_heading”).innerText = “Hello World!”;
		3. document.querySelectorAll(“section”).addEventListener(“mouseover”, function(event){ event.target.innerText = event.target.getAttribute(“class”)});
		4.let newElem = document.createElement(“div”);
		5. newElem.setAttribute(“class”, “purple”); 
newElem.style.backgroundColor = “purple”;
		6. document.querySelector(“section”).appendChild(newElem);
		
